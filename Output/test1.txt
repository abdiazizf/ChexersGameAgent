******************************************************************
welcome to Chexers referee version 1.1 (released Apr 27 2019).
conducts a game of Chexers between three Player classes.
run `python -m referee --help` for additional usage information.
******************************************************************
* all messages printed by the referee after this begin with a *
* (any other lines of output must be from your Player classes).
*
* importing red player's player class 'Player' from package 'A_n_J.Player'
* importing green player's player class 'Player' from package 'A_n_J.Player'
* importing blue player's player class 'Player' from package 'A_n_J.Player'
* NOTE: unable to measure memory usage on this platform (try dimefox)
* ** initialising players **
* initialising red player as a 'A_n_J.Player.Player'
*   time:  + 0.000s  (just elapsed)    0.000s  (game total)
* initialising green player as a 'A_n_J.Player.Player'
*   time:  + 0.000s  (just elapsed)    0.000s  (game total)
* initialising blue player as a 'A_n_J.Player.Player'
*   time:  + 0.000s  (just elapsed)    0.000s  (game total)
* ** game start **
* displaying game info:
*   scores: Red: 0 exits, Green: 0 exits, Blue: 0 exits.
*   board:       ,-' `-._,-' `-._,-' `-._,-' `-.
*               |   G   |   G   |   G   |   G   |
*               |  0,-3 |  1,-3 |  2,-3 |  3,-3 |
*            ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*           |       |       |       |       |       |
*           | -1,-2 |  0,-2 |  1,-2 |  2,-2 |  3,-2 |
*        ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*       |       |       |       |       |       |       |
*       | -2,-1 | -1,-1 |  0,-1 |  1,-1 |  2,-1 |  3,-1 |
*    ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*   |   R   |       |       |       |       |       |   B   |
*   | -3, 0 | -2, 0 | -1, 0 |  0, 0 |  1, 0 |  2, 0 |  3, 0 |
*    `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*       |   R   |       |       |       |       |   B   |
*       | -3, 1 | -2, 1 | -1, 1 |  0, 1 |  1, 1 |  2, 1 |
*        `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*           |   R   |       |       |       |   B   |
*           | -3, 2 | -2, 2 | -1, 2 |  0, 2 |  1, 2 | key:
*            `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' ,-' `-.
*               |   R   |       |       |   B   |   | input |
*               | -3, 3 | -2, 3 | -1, 3 |  0, 3 |   |  q, r |
*                `-._,-' `-._,-' `-._,-' `-._,-'     `-._,-'
* ** red player's turn **
* asking red player for next action...
*   red player returned action: ('MOVE', ((-3, 2), (-2, 2)))
*   time:  + 0.141s  (just elapsed)    0.141s  (game total)
* displaying game info:
*   scores: Red: 0 exits, Green: 0 exits, Blue: 0 exits.
*   board:       ,-' `-._,-' `-._,-' `-._,-' `-.
*               |   G   |   G   |   G   |   G   |
*               |  0,-3 |  1,-3 |  2,-3 |  3,-3 |
*            ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*           |       |       |       |       |       |
*           | -1,-2 |  0,-2 |  1,-2 |  2,-2 |  3,-2 |
*        ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*       |       |       |       |       |       |       |
*       | -2,-1 | -1,-1 |  0,-1 |  1,-1 |  2,-1 |  3,-1 |
*    ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*   |   R   |       |       |       |       |       |   B   |
*   | -3, 0 | -2, 0 | -1, 0 |  0, 0 |  1, 0 |  2, 0 |  3, 0 |
*    `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*       |   R   |       |       |       |       |   B   |
*       | -3, 1 | -2, 1 | -1, 1 |  0, 1 |  1, 1 |  2, 1 |
*        `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*           |       |   R   |       |       |   B   |
*           | -3, 2 | -2, 2 | -1, 2 |  0, 2 |  1, 2 | key:
*            `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' ,-' `-.
*               |   R   |       |       |   B   |   | input |
*               | -3, 3 | -2, 3 | -1, 3 |  0, 3 |   |  q, r |
*                `-._,-' `-._,-' `-._,-' `-._,-'     `-._,-'
* updating red player with red's action ('MOVE', ((-3, 2), (-2, 2)))...
*   time:  + 0.000s  (just elapsed)    0.141s  (game total)
* updating green player with red's action ('MOVE', ((-3, 2), (-2, 2)))...
*   time:  + 0.000s  (just elapsed)    0.000s  (game total)
* updating blue player with red's action ('MOVE', ((-3, 2), (-2, 2)))...
*   time:  + 0.000s  (just elapsed)    0.000s  (game total)
* ** green player's turn **
* asking green player for next action...
*   green player returned action: ('MOVE', ((2, -3), (2, -2)))
*   time:  + 0.125s  (just elapsed)    0.125s  (game total)
* displaying game info:
*   scores: Red: 0 exits, Green: 0 exits, Blue: 0 exits.
*   board:       ,-' `-._,-' `-._,-' `-._,-' `-.
*               |   G   |   G   |       |   G   |
*               |  0,-3 |  1,-3 |  2,-3 |  3,-3 |
*            ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*           |       |       |       |   G   |       |
*           | -1,-2 |  0,-2 |  1,-2 |  2,-2 |  3,-2 |
*        ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*       |       |       |       |       |       |       |
*       | -2,-1 | -1,-1 |  0,-1 |  1,-1 |  2,-1 |  3,-1 |
*    ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*   |   R   |       |       |       |       |       |   B   |
*   | -3, 0 | -2, 0 | -1, 0 |  0, 0 |  1, 0 |  2, 0 |  3, 0 |
*    `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*       |   R   |       |       |       |       |   B   |
*       | -3, 1 | -2, 1 | -1, 1 |  0, 1 |  1, 1 |  2, 1 |
*        `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*           |       |   R   |       |       |   B   |
*           | -3, 2 | -2, 2 | -1, 2 |  0, 2 |  1, 2 | key:
*            `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' ,-' `-.
*               |   R   |       |       |   B   |   | input |
*               | -3, 3 | -2, 3 | -1, 3 |  0, 3 |   |  q, r |
*                `-._,-' `-._,-' `-._,-' `-._,-'     `-._,-'
* updating red player with green's action ('MOVE', ((2, -3), (2, -2)))...
*   time:  + 0.000s  (just elapsed)    0.141s  (game total)
* updating green player with green's action ('MOVE', ((2, -3), (2, -2)))...
*   time:  + 0.000s  (just elapsed)    0.125s  (game total)
* updating blue player with green's action ('MOVE', ((2, -3), (2, -2)))...
*   time:  + 0.000s  (just elapsed)    0.000s  (game total)
* ** blue player's turn **
* asking blue player for next action...
*   blue player returned action: ('MOVE', ((0, 3), (-1, 3)))
*   time:  + 0.125s  (just elapsed)    0.125s  (game total)
* displaying game info:
*   scores: Red: 0 exits, Green: 0 exits, Blue: 0 exits.
*   board:       ,-' `-._,-' `-._,-' `-._,-' `-.
*               |   G   |   G   |       |   G   |
*               |  0,-3 |  1,-3 |  2,-3 |  3,-3 |
*            ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*           |       |       |       |   G   |       |
*           | -1,-2 |  0,-2 |  1,-2 |  2,-2 |  3,-2 |
*        ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*       |       |       |       |       |       |       |
*       | -2,-1 | -1,-1 |  0,-1 |  1,-1 |  2,-1 |  3,-1 |
*    ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*   |   R   |       |       |       |       |       |   B   |
*   | -3, 0 | -2, 0 | -1, 0 |  0, 0 |  1, 0 |  2, 0 |  3, 0 |
*    `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*       |   R   |       |       |       |       |   B   |
*       | -3, 1 | -2, 1 | -1, 1 |  0, 1 |  1, 1 |  2, 1 |
*        `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*           |       |   R   |       |       |   B   |
*           | -3, 2 | -2, 2 | -1, 2 |  0, 2 |  1, 2 | key:
*            `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' ,-' `-.
*               |   R   |       |   B   |       |   | input |
*               | -3, 3 | -2, 3 | -1, 3 |  0, 3 |   |  q, r |
*                `-._,-' `-._,-' `-._,-' `-._,-'     `-._,-'
* updating red player with blue's action ('MOVE', ((0, 3), (-1, 3)))...
*   time:  + 0.000s  (just elapsed)    0.141s  (game total)
* updating green player with blue's action ('MOVE', ((0, 3), (-1, 3)))...
*   time:  + 0.000s  (just elapsed)    0.125s  (game total)
* updating blue player with blue's action ('MOVE', ((0, 3), (-1, 3)))...
*   time:  + 0.000s  (just elapsed)    0.125s  (game total)
* ** red player's turn **
* asking red player for next action...
*   red player returned action: ('MOVE', ((-2, 2), (-2, 3)))
*   time:  + 0.125s  (just elapsed)    0.266s  (game total)
* displaying game info:
*   scores: Red: 0 exits, Green: 0 exits, Blue: 0 exits.
*   board:       ,-' `-._,-' `-._,-' `-._,-' `-.
*               |   G   |   G   |       |   G   |
*               |  0,-3 |  1,-3 |  2,-3 |  3,-3 |
*            ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*           |       |       |       |   G   |       |
*           | -1,-2 |  0,-2 |  1,-2 |  2,-2 |  3,-2 |
*        ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*       |       |       |       |       |       |       |
*       | -2,-1 | -1,-1 |  0,-1 |  1,-1 |  2,-1 |  3,-1 |
*    ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*   |   R   |       |       |       |       |       |   B   |
*   | -3, 0 | -2, 0 | -1, 0 |  0, 0 |  1, 0 |  2, 0 |  3, 0 |
*    `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*       |   R   |       |       |       |       |   B   |
*       | -3, 1 | -2, 1 | -1, 1 |  0, 1 |  1, 1 |  2, 1 |
*        `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*           |       |       |       |       |   B   |
*           | -3, 2 | -2, 2 | -1, 2 |  0, 2 |  1, 2 | key:
*            `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' ,-' `-.
*               |   R   |   R   |   B   |       |   | input |
*               | -3, 3 | -2, 3 | -1, 3 |  0, 3 |   |  q, r |
*                `-._,-' `-._,-' `-._,-' `-._,-'     `-._,-'
* updating red player with red's action ('MOVE', ((-2, 2), (-2, 3)))...
*   time:  + 0.000s  (just elapsed)    0.266s  (game total)
* updating green player with red's action ('MOVE', ((-2, 2), (-2, 3)))...
*   time:  + 0.000s  (just elapsed)    0.125s  (game total)
* updating blue player with red's action ('MOVE', ((-2, 2), (-2, 3)))...
*   time:  + 0.000s  (just elapsed)    0.125s  (game total)
* ** green player's turn **
* asking green player for next action...
*   green player returned action: ('JUMP', ((0, -3), (2, -3)))
*   time:  + 0.141s  (just elapsed)    0.266s  (game total)
* displaying game info:
*   scores: Red: 0 exits, Green: 0 exits, Blue: 0 exits.
*   board:       ,-' `-._,-' `-._,-' `-._,-' `-.
*               |       |   G   |   G   |   G   |
*               |  0,-3 |  1,-3 |  2,-3 |  3,-3 |
*            ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*           |       |       |       |   G   |       |
*           | -1,-2 |  0,-2 |  1,-2 |  2,-2 |  3,-2 |
*        ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*       |       |       |       |       |       |       |
*       | -2,-1 | -1,-1 |  0,-1 |  1,-1 |  2,-1 |  3,-1 |
*    ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*   |   R   |       |       |       |       |       |   B   |
*   | -3, 0 | -2, 0 | -1, 0 |  0, 0 |  1, 0 |  2, 0 |  3, 0 |
*    `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*       |   R   |       |       |       |       |   B   |
*       | -3, 1 | -2, 1 | -1, 1 |  0, 1 |  1, 1 |  2, 1 |
*        `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*           |       |       |       |       |   B   |
*           | -3, 2 | -2, 2 | -1, 2 |  0, 2 |  1, 2 | key:
*            `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' ,-' `-.
*               |   R   |   R   |   B   |       |   | input |
*               | -3, 3 | -2, 3 | -1, 3 |  0, 3 |   |  q, r |
*                `-._,-' `-._,-' `-._,-' `-._,-'     `-._,-'
* updating red player with green's action ('JUMP', ((0, -3), (2, -3)))...
*   time:  + 0.000s  (just elapsed)    0.266s  (game total)
* updating green player with green's action ('JUMP', ((0, -3), (2, -3)))...
*   time:  + 0.000s  (just elapsed)    0.266s  (game total)
* updating blue player with green's action ('JUMP', ((0, -3), (2, -3)))...
*   time:  + 0.000s  (just elapsed)    0.125s  (game total)
* ** blue player's turn **
* asking blue player for next action...
*   blue player returned action: ('MOVE', ((3, 0), (2, 0)))
*   time:  + 0.125s  (just elapsed)    0.250s  (game total)
* displaying game info:
*   scores: Red: 0 exits, Green: 0 exits, Blue: 0 exits.
*   board:       ,-' `-._,-' `-._,-' `-._,-' `-.
*               |       |   G   |   G   |   G   |
*               |  0,-3 |  1,-3 |  2,-3 |  3,-3 |
*            ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*           |       |       |       |   G   |       |
*           | -1,-2 |  0,-2 |  1,-2 |  2,-2 |  3,-2 |
*        ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*       |       |       |       |       |       |       |
*       | -2,-1 | -1,-1 |  0,-1 |  1,-1 |  2,-1 |  3,-1 |
*    ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*   |   R   |       |       |       |       |   B   |       |
*   | -3, 0 | -2, 0 | -1, 0 |  0, 0 |  1, 0 |  2, 0 |  3, 0 |
*    `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*       |   R   |       |       |       |       |   B   |
*       | -3, 1 | -2, 1 | -1, 1 |  0, 1 |  1, 1 |  2, 1 |
*        `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*           |       |       |       |       |   B   |
*           | -3, 2 | -2, 2 | -1, 2 |  0, 2 |  1, 2 | key:
*            `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' ,-' `-.
*               |   R   |   R   |   B   |       |   | input |
*               | -3, 3 | -2, 3 | -1, 3 |  0, 3 |   |  q, r |
*                `-._,-' `-._,-' `-._,-' `-._,-'     `-._,-'
* updating red player with blue's action ('MOVE', ((3, 0), (2, 0)))...
*   time:  + 0.000s  (just elapsed)    0.266s  (game total)
* updating green player with blue's action ('MOVE', ((3, 0), (2, 0)))...
*   time:  + 0.000s  (just elapsed)    0.266s  (game total)
* updating blue player with blue's action ('MOVE', ((3, 0), (2, 0)))...
*   time:  + 0.000s  (just elapsed)    0.250s  (game total)
* ** red player's turn **
* asking red player for next action...
*   red player returned action: ('JUMP', ((-2, 3), (0, 3)))
*   time:  + 0.125s  (just elapsed)    0.391s  (game total)
* displaying game info:
*   scores: Red: 0 exits, Green: 0 exits, Blue: 0 exits.
*   board:       ,-' `-._,-' `-._,-' `-._,-' `-.
*               |       |   G   |   G   |   G   |
*               |  0,-3 |  1,-3 |  2,-3 |  3,-3 |
*            ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*           |       |       |       |   G   |       |
*           | -1,-2 |  0,-2 |  1,-2 |  2,-2 |  3,-2 |
*        ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*       |       |       |       |       |       |       |
*       | -2,-1 | -1,-1 |  0,-1 |  1,-1 |  2,-1 |  3,-1 |
*    ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*   |   R   |       |       |       |       |   B   |       |
*   | -3, 0 | -2, 0 | -1, 0 |  0, 0 |  1, 0 |  2, 0 |  3, 0 |
*    `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*       |   R   |       |       |       |       |   B   |
*       | -3, 1 | -2, 1 | -1, 1 |  0, 1 |  1, 1 |  2, 1 |
*        `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*           |       |       |       |       |   B   |
*           | -3, 2 | -2, 2 | -1, 2 |  0, 2 |  1, 2 | key:
*            `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' ,-' `-.
*               |   R   |       |   R   |   R   |   | input |
*               | -3, 3 | -2, 3 | -1, 3 |  0, 3 |   |  q, r |
*                `-._,-' `-._,-' `-._,-' `-._,-'     `-._,-'
* updating red player with red's action ('JUMP', ((-2, 3), (0, 3)))...
*   time:  + 0.000s  (just elapsed)    0.391s  (game total)
* updating green player with red's action ('JUMP', ((-2, 3), (0, 3)))...
*   time:  + 0.000s  (just elapsed)    0.266s  (game total)
* updating blue player with red's action ('JUMP', ((-2, 3), (0, 3)))...
*   time:  + 0.000s  (just elapsed)    0.250s  (game total)
* ** green player's turn **
* asking green player for next action...
*   green player returned action: ('JUMP', ((2, -3), (2, -1)))
*   time:  + 0.141s  (just elapsed)    0.406s  (game total)
* displaying game info:
*   scores: Red: 0 exits, Green: 0 exits, Blue: 0 exits.
*   board:       ,-' `-._,-' `-._,-' `-._,-' `-.
*               |       |   G   |       |   G   |
*               |  0,-3 |  1,-3 |  2,-3 |  3,-3 |
*            ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*           |       |       |       |   G   |       |
*           | -1,-2 |  0,-2 |  1,-2 |  2,-2 |  3,-2 |
*        ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*       |       |       |       |       |   G   |       |
*       | -2,-1 | -1,-1 |  0,-1 |  1,-1 |  2,-1 |  3,-1 |
*    ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*   |   R   |       |       |       |       |   B   |       |
*   | -3, 0 | -2, 0 | -1, 0 |  0, 0 |  1, 0 |  2, 0 |  3, 0 |
*    `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*       |   R   |       |       |       |       |   B   |
*       | -3, 1 | -2, 1 | -1, 1 |  0, 1 |  1, 1 |  2, 1 |
*        `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*           |       |       |       |       |   B   |
*           | -3, 2 | -2, 2 | -1, 2 |  0, 2 |  1, 2 | key:
*            `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' ,-' `-.
*               |   R   |       |   R   |   R   |   | input |
*               | -3, 3 | -2, 3 | -1, 3 |  0, 3 |   |  q, r |
*                `-._,-' `-._,-' `-._,-' `-._,-'     `-._,-'
* updating red player with green's action ('JUMP', ((2, -3), (2, -1)))...
*   time:  + 0.000s  (just elapsed)    0.391s  (game total)
* updating green player with green's action ('JUMP', ((2, -3), (2, -1)))...
*   time:  + 0.000s  (just elapsed)    0.406s  (game total)
* updating blue player with green's action ('JUMP', ((2, -3), (2, -1)))...
*   time:  + 0.000s  (just elapsed)    0.250s  (game total)
* ** blue player's turn **
* asking blue player for next action...
*   blue player returned action: ('MOVE', ((1, 2), (0, 2)))
*   time:  + 0.125s  (just elapsed)    0.375s  (game total)
* displaying game info:
*   scores: Red: 0 exits, Green: 0 exits, Blue: 0 exits.
*   board:       ,-' `-._,-' `-._,-' `-._,-' `-.
*               |       |   G   |       |   G   |
*               |  0,-3 |  1,-3 |  2,-3 |  3,-3 |
*            ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*           |       |       |       |   G   |       |
*           | -1,-2 |  0,-2 |  1,-2 |  2,-2 |  3,-2 |
*        ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*       |       |       |       |       |   G   |       |
*       | -2,-1 | -1,-1 |  0,-1 |  1,-1 |  2,-1 |  3,-1 |
*    ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*   |   R   |       |       |       |       |   B   |       |
*   | -3, 0 | -2, 0 | -1, 0 |  0, 0 |  1, 0 |  2, 0 |  3, 0 |
*    `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*       |   R   |       |       |       |       |   B   |
*       | -3, 1 | -2, 1 | -1, 1 |  0, 1 |  1, 1 |  2, 1 |
*        `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*           |       |       |       |   B   |       |
*           | -3, 2 | -2, 2 | -1, 2 |  0, 2 |  1, 2 | key:
*            `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' ,-' `-.
*               |   R   |       |   R   |   R   |   | input |
*               | -3, 3 | -2, 3 | -1, 3 |  0, 3 |   |  q, r |
*                `-._,-' `-._,-' `-._,-' `-._,-'     `-._,-'
* updating red player with blue's action ('MOVE', ((1, 2), (0, 2)))...
*   time:  + 0.000s  (just elapsed)    0.391s  (game total)
* updating green player with blue's action ('MOVE', ((1, 2), (0, 2)))...
*   time:  + 0.000s  (just elapsed)    0.406s  (game total)
* updating blue player with blue's action ('MOVE', ((1, 2), (0, 2)))...
*   time:  + 0.000s  (just elapsed)    0.375s  (game total)
* ** red player's turn **
* asking red player for next action...
*   red player returned action: ('MOVE', ((0, 3), (1, 2)))
*   time:  + 0.125s  (just elapsed)    0.516s  (game total)
* displaying game info:
*   scores: Red: 0 exits, Green: 0 exits, Blue: 0 exits.
*   board:       ,-' `-._,-' `-._,-' `-._,-' `-.
*               |       |   G   |       |   G   |
*               |  0,-3 |  1,-3 |  2,-3 |  3,-3 |
*            ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*           |       |       |       |   G   |       |
*           | -1,-2 |  0,-2 |  1,-2 |  2,-2 |  3,-2 |
*        ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*       |       |       |       |       |   G   |       |
*       | -2,-1 | -1,-1 |  0,-1 |  1,-1 |  2,-1 |  3,-1 |
*    ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*   |   R   |       |       |       |       |   B   |       |
*   | -3, 0 | -2, 0 | -1, 0 |  0, 0 |  1, 0 |  2, 0 |  3, 0 |
*    `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*       |   R   |       |       |       |       |   B   |
*       | -3, 1 | -2, 1 | -1, 1 |  0, 1 |  1, 1 |  2, 1 |
*        `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*           |       |       |       |   B   |   R   |
*           | -3, 2 | -2, 2 | -1, 2 |  0, 2 |  1, 2 | key:
*            `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' ,-' `-.
*               |   R   |       |   R   |       |   | input |
*               | -3, 3 | -2, 3 | -1, 3 |  0, 3 |   |  q, r |
*                `-._,-' `-._,-' `-._,-' `-._,-'     `-._,-'
* updating red player with red's action ('MOVE', ((0, 3), (1, 2)))...
*   time:  + 0.000s  (just elapsed)    0.516s  (game total)
* updating green player with red's action ('MOVE', ((0, 3), (1, 2)))...
*   time:  + 0.000s  (just elapsed)    0.406s  (game total)
* updating blue player with red's action ('MOVE', ((0, 3), (1, 2)))...
*   time:  + 0.000s  (just elapsed)    0.375s  (game total)
* ** green player's turn **
* asking green player for next action...
*   green player returned action: ('MOVE', ((2, -2), (2, -3)))
*   time:  + 0.125s  (just elapsed)    0.531s  (game total)
* displaying game info:
*   scores: Red: 0 exits, Green: 0 exits, Blue: 0 exits.
*   board:       ,-' `-._,-' `-._,-' `-._,-' `-.
*               |       |   G   |   G   |   G   |
*               |  0,-3 |  1,-3 |  2,-3 |  3,-3 |
*            ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*           |       |       |       |       |       |
*           | -1,-2 |  0,-2 |  1,-2 |  2,-2 |  3,-2 |
*        ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*       |       |       |       |       |   G   |       |
*       | -2,-1 | -1,-1 |  0,-1 |  1,-1 |  2,-1 |  3,-1 |
*    ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*   |   R   |       |       |       |       |   B   |       |
*   | -3, 0 | -2, 0 | -1, 0 |  0, 0 |  1, 0 |  2, 0 |  3, 0 |
*    `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*       |   R   |       |       |       |       |   B   |
*       | -3, 1 | -2, 1 | -1, 1 |  0, 1 |  1, 1 |  2, 1 |
*        `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*           |       |       |       |   B   |   R   |
*           | -3, 2 | -2, 2 | -1, 2 |  0, 2 |  1, 2 | key:
*            `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' ,-' `-.
*               |   R   |       |   R   |       |   | input |
*               | -3, 3 | -2, 3 | -1, 3 |  0, 3 |   |  q, r |
*                `-._,-' `-._,-' `-._,-' `-._,-'     `-._,-'
* updating red player with green's action ('MOVE', ((2, -2), (2, -3)))...
*   time:  + 0.000s  (just elapsed)    0.516s  (game total)
* updating green player with green's action ('MOVE', ((2, -2), (2, -3)))...
*   time:  + 0.000s  (just elapsed)    0.531s  (game total)
* updating blue player with green's action ('MOVE', ((2, -2), (2, -3)))...
*   time:  + 0.000s  (just elapsed)    0.375s  (game total)
* ** blue player's turn **
* asking blue player for next action...
*   blue player returned action: ('MOVE', ((0, 2), (0, 3)))
*   time:  + 0.125s  (just elapsed)    0.500s  (game total)
* displaying game info:
*   scores: Red: 0 exits, Green: 0 exits, Blue: 0 exits.
*   board:       ,-' `-._,-' `-._,-' `-._,-' `-.
*               |       |   G   |   G   |   G   |
*               |  0,-3 |  1,-3 |  2,-3 |  3,-3 |
*            ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*           |       |       |       |       |       |
*           | -1,-2 |  0,-2 |  1,-2 |  2,-2 |  3,-2 |
*        ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*       |       |       |       |       |   G   |       |
*       | -2,-1 | -1,-1 |  0,-1 |  1,-1 |  2,-1 |  3,-1 |
*    ,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-.
*   |   R   |       |       |       |       |   B   |       |
*   | -3, 0 | -2, 0 | -1, 0 |  0, 0 |  1, 0 |  2, 0 |  3, 0 |
*    `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*       |   R   |       |       |       |       |   B   |
*       | -3, 1 | -2, 1 | -1, 1 |  0, 1 |  1, 1 |  2, 1 |
*        `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' `-._,-'
*           |       |       |       |       |   R   |
*           | -3, 2 | -2, 2 | -1, 2 |  0, 2 |  1, 2 | key:
*            `-._,-' `-._,-' `-._,-' `-._,-' `-._,-' ,-' `-.
*               |   R   |       |   R   |   B   |   | input |
*               | -3, 3 | -2, 3 | -1, 3 |  0, 3 |   |  q, r |
*                `-._,-' `-._,-' `-._,-' `-._,-'     `-._,-'
* updating red player with blue's action ('MOVE', ((0, 2), (0, 3)))...
*   time:  + 0.000s  (just elapsed)    0.516s  (game total)
* updating green player with blue's action ('MOVE', ((0, 2), (0, 3)))...
*   time:  + 0.000s  (just elapsed)    0.531s  (game total)
* updating blue player with blue's action ('MOVE', ((0, 2), (0, 3)))...
*   time:  + 0.000s  (just elapsed)    0.500s  (game total)
* ** red player's turn **
* asking red player for next action...
Traceback (most recent call last):
  File "C:\Users\Jordan\Documents\Uni\AI\Part B\ChexersAI\referee\__main__.py", line 102, in <module>
    main()
  File "C:\Users\Jordan\Documents\Uni\AI\Part B\ChexersAI\referee\__main__.py", line 36, in main
    play([p_R, p_G, p_B], options, out)
  File "C:\Users\Jordan\Documents\Uni\AI\Part B\ChexersAI\referee\__main__.py", line 79, in play
    action = curr_player.action()
  File "C:\Users\Jordan\Documents\Uni\AI\Part B\ChexersAI\referee\player.py", line 48, in action
    action = self.player.action()
  File "C:\Users\Jordan\Documents\Uni\AI\Part B\ChexersAI\A_n_J\Player.py", line 63, in action
    action = self.mcAI.best_action(1)
  File "C:\Users\Jordan\Documents\Uni\AI\Part B\ChexersAI\A_n_J\MonteCarlo.py", line 21, in best_action
    simulation_result = selected_node.rollout()
  File "C:\Users\Jordan\Documents\Uni\AI\Part B\ChexersAI\A_n_J\MCNode.py", line 75, in rollout
    current_state = current_state.generate_successor(action)
  File "C:\Users\Jordan\Documents\Uni\AI\Part B\ChexersAI\A_n_J\BoardState.py", line 93, in generate_successor
    new_piece_vector = self.update_piece_positions(self.player_colour, action,self.board)
  File "C:\Users\Jordan\Documents\Uni\AI\Part B\ChexersAI\A_n_J\BoardState.py", line 53, in update_piece_positions
    new_vector[other_player].remove(neighbour)
ValueError: list.remove(x): x not in list
